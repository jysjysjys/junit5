name: Cross-Version

on:
  schedule:
    - cron: '0 0 * * 6' # Every Saturday at 00:00 UTC
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - '**'

permissions: {}

env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

jobs:
  openjdk:
    strategy:
      fail-fast: false
      matrix:
        jdk:
        - version: 25
          type: ea
        - version: 26
          type: ea
    name: "OpenJDK ${{ matrix.jdk.version }} (${{ matrix.jdk.release || matrix.jdk.type }})"
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
      - name: Set up Test JDK
        uses: ./.github/actions/setup-test-jdk
      - name: "Set up JDK ${{ matrix.jdk.version }} (${{ matrix.jdk.release || 'ea' }})"
        if: matrix.jdk.type == 'ea'
        uses: oracle-actions/setup-java@b1546e588c27008e88bfcabda44d11c22316b9b8 # v1.4.2
        with:
          website: jdk.java.net
          release: ${{ matrix.jdk.release || matrix.jdk.version }}
          version: latest
      - name: "Set up JDK ${{ matrix.jdk.version }} (${{ matrix.jdk.distribution || 'temurin' }})"
        if: matrix.jdk.type == 'ga'
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: ${{ matrix.jdk.distribution || 'temurin' }}
          java-version: ${{ matrix.jdk.version }}
          check-latest: true
      - name: 'Prepare JDK${{ matrix.jdk.version }} env var'
        shell: bash
        run: echo "JDK${{ matrix.jdk.version }}=$JAVA_HOME" >> $GITHUB_ENV
      - name: Build
        uses: ./.github/actions/run-gradle
        with:
          encryptionKey: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          arguments: |
            -Ptesting.enableJaCoCo=false \
            -PjavaToolchain.version=${{ matrix.jdk.version }} \
            -Dscan.tag.JDK_${{ matrix.jdk.version }} \
            build \
            --no-configuration-cache #Disable configuration cache due to https://github.com/diffplug/spotless/issues/2318
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ always() }}
        with:
          name: Open Test Reports (${{ github.job }} ${{ matrix.jdk.version }} (${{ matrix.jdk.release || matrix.jdk.type }}))
          path: '**/build/reports/open-test-report.html'
  openj9:
    strategy:
      fail-fast: false
      matrix:
        jdk: [ 21 ]
    name: "OpenJ9 ${{ matrix.jdk }}"
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
      - name: Set up Test JDK
        uses: ./.github/actions/setup-test-jdk
        with:
          distribution: semeru
      - name: 'Set up JDK ${{ matrix.jdk }}'
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: semeru
          java-version: ${{ matrix.jdk }}
          check-latest: true
      - name: 'Prepare JDK${{ matrix.jdk }} env var'
        shell: bash
        run: echo "JDK${{ matrix.jdk }}=$JAVA_HOME" >> $GITHUB_ENV
      - name: Build
        uses: ./.github/actions/run-gradle
        with:
          encryptionKey: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          arguments: |
            -Ptesting.enableJaCoCo=false \
            -PjavaToolchain.version=${{ matrix.jdk }} \
            -PjavaToolchain.implementation=j9 \
            -Dscan.tag.JDK_${{ matrix.jdk }} \
            -Dscan.tag.OpenJ9 \
            build \
            --no-configuration-cache # Disable configuration cache due to https://github.com/diffplug/spotless/issues/2318
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ always() }}
        with:
          name: Open Test Reports (${{ github.job }})
          path: '**/build/reports/open-test-report.html'
